stages:
  - build
  - deploy

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_BUILDKIT: 1
  BUILDKIT_PROGRESS: plain
  IMAGE_TAG: "latest"
  IMAGE_PREFIX: "$CI_REGISTRY_IMAGE"
  CACHE_DIR: ".buildx-cache"
  ENDPOINT_ID: "21"

.docker-build: &docker-build
  stage: build
  image: docker:24
  services:
    - docker:24-dind
  before_script:
    - echo "Logging in to GitLab Registry..."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker buildx create --use || docker buildx use default
    - mkdir -p "$CACHE_DIR"
  script:
    - docker buildx build --pull --push \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        --cache-from=type=local,src=$CACHE_DIR \
        --cache-to=type=local,dest=$CACHE_DIR-new,mode=max \
        --cache-from=type=registry,ref=$CI_REGISTRY_IMAGE/cache:$CI_JOB_NAME \
        --cache-to=type=registry,ref=$CI_REGISTRY_IMAGE/cache:$CI_JOB_NAME,mode=max \
        -t "$IMAGE_PREFIX/$IMAGE_NAME:$IMAGE_TAG" -f $DOCKERFILE .
    - rm -rf "$CACHE_DIR" && mv "$CACHE_DIR-new" "$CACHE_DIR"
  cache:
    key:
      files:
        - Cargo.lock
        - frontend/package-lock.json
      prefix: "$CI_JOB_NAME"
    paths:
      - ~/.cargo/registry
      - ~/.cargo/git
      - ~/.cache/sccache
      - target
      - frontend/node_modules/.cache
      - .buildx-cache
  timeout: 90m
  needs: []

build_api_gateway:
  <<: *docker-build
  variables:
    IMAGE_NAME: api-gateway
    DOCKERFILE: services/api-gateway/Dockerfile
  rules:
    - changes:
        - Cargo.toml
        - Cargo.lock
        - shared/**/*
        - services/api-gateway/**/*

build_pdf_ingest:
  <<: *docker-build
  variables:
    IMAGE_NAME: pdf-ingest
    DOCKERFILE: services/pdf-ingest/Dockerfile
  rules:
    - changes:
        - Cargo.toml
        - Cargo.lock
        - shared/**/*
        - services/pdf-ingest/**/*

build_text_extraction:
  <<: *docker-build
  variables:
    IMAGE_NAME: text-extraction
    DOCKERFILE: services/text-extraction/Dockerfile
  rules:
    - changes:
        - Cargo.toml
        - Cargo.lock
        - shared/**/*
        - services/text-extraction/**/*

build_pipeline_runner:
  <<: *docker-build
  variables:
    IMAGE_NAME: pipeline-runner
    DOCKERFILE: services/pipeline-runner/Dockerfile
  rules:
    - changes:
        - Cargo.toml
        - Cargo.lock
        - shared/**/*
        - services/pipeline-runner/**/*

build_prompt_manager:
  <<: *docker-build
  variables:
    IMAGE_NAME: prompt-manager
    DOCKERFILE: services/prompt-manager/Dockerfile
  rules:
    - changes:
        - Cargo.toml
        - Cargo.lock
        - shared/**/*
        - services/prompt-manager/**/*

build_pipeline_api:
  <<: *docker-build
  variables:
    IMAGE_NAME: pipeline-api
    DOCKERFILE: services/pipeline-api/Dockerfile
  rules:
    - changes:
        - Cargo.toml
        - Cargo.lock
        - shared/**/*
        - services/pipeline-api/**/*

build_metrics:
  <<: *docker-build
  variables:
    IMAGE_NAME: metrics
    DOCKERFILE: services/metrics/Dockerfile
  rules:
    - changes:
        - Cargo.toml
        - Cargo.lock
        - shared/**/*
        - services/metrics/**/*

build_history_service:
  <<: *docker-build
  variables:
    IMAGE_NAME: history-service
    DOCKERFILE: services/history-service/Dockerfile
  rules:
    - changes:
        - Cargo.toml
        - Cargo.lock
        - shared/**/*
        - services/history-service/**/*

build_frontend:
  <<: *docker-build
  variables:
    IMAGE_NAME: frontend
    DOCKERFILE: frontend/Dockerfile
  rules:
    - changes:
        - frontend/**/*

deploy_stack:
  stage: deploy
  image: curlimages/curl:latest
  needs:
    - build_api_gateway
    - build_pdf_ingest
    - build_text_extraction
    - build_pipeline_runner
    - build_prompt_manager
    - build_pipeline_api
    - build_metrics
    - build_history_service
    - build_frontend
  script:
    - echo "Deploying updated docker-compose to Portainer..."
    - |
      curl -X POST "https://portainer.adesso.claims/api/stacks?method=string&type=1&endpointId=$ENDPOINT_ID" \
        -H "Authorization: Bearer $PORTAINER_TOKEN" \
        -H "Content-Type: application/json" \
        -d '{
              "Name": "regress",
              "StackFileContent": "'"$(sed 's/"/\\"/g' docker-compose.prod.yml)"'"
            }'
  only:
    - main
