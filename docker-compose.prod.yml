version: "3.9"

# Gemeinsames Overlay-Netz muss bereits existieren (backendnet, overlay, attachable=ON)
networks:
  backendnet:
    external: true

services:
  api-gateway:
    image: docker.adesso.claims/regress:api-gateway-release
    networks: [backendnet]
    ports: ["8080:8080"]
    deploy:
      restart_policy: { condition: any, delay: 5s, max_attempts: 10, window: 120s }

  pdf-ingest:
    image: docker.adesso.claims/regress:pdf-ingest-release
    networks: [backendnet]
    environment:
      DATABASE_URL: postgres://regress:nITj%22%2B0%28f89F@regressdb:5432/regress
      MESSAGE_BROKER_URL: kafka:9092
    ports: ["8081:8081"]
    deploy:
      restart_policy: { condition: any, delay: 5s, max_attempts: 10, window: 120s }

  text-extraction:
    image: docker.adesso.claims/regress:text-extraction-release
    networks: [backendnet]
    environment:
      DATABASE_URL: postgres://regress:nITj%22%2B0%28f89F@regressdb:5432/regress
      MESSAGE_BROKER_URL: kafka:9092
    ports: ["8083:8083"]
    deploy:
      restart_policy: { condition: any, delay: 5s, max_attempts: 10, window: 120s }

  pipeline-runner:
    image: docker.adesso.claims/regress:pipeline-runner-release
    networks: [backendnet]
    environment:
      DATABASE_URL: postgres://regress:nITj%22%2B0%28f89F@regressdb:5432/regress
      MESSAGE_BROKER_URL: kafka:9092
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      RUST_LOG: info,pipeline_runner=debug,openai_client=debug
      PROMPT_MANAGER_URL: http://prompt-manager:8082
    ports: ["8087:8087"]
    deploy:
      restart_policy: { condition: any, delay: 5s, max_attempts: 10, window: 120s }

  prompt-manager:
    image: docker.adesso.claims/regress:prompt-manager-release
    networks: [backendnet]
    environment:
      DATABASE_URL: postgres://regress:nITj%22%2B0%28f89F@regressdb:5432/regress
      RUST_LOG: info,prompt_manager=debug,tower_http=info
    ports: ["8082:8082"]
    deploy:
      restart_policy: { condition: any, delay: 5s, max_attempts: 10, window: 120s }

  pipeline-api:
    image: docker.adesso.claims/regress:pipeline-api-release
    networks: [backendnet]
    environment:
      DATABASE_URL: postgres://regress:nITj%22%2B0%28f89F@regressdb:5432/regress
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    ports: ["8084:8084"]
    deploy:
      restart_policy: { condition: any, delay: 5s, max_attempts: 10, window: 120s }

  metrics:
    image: docker.adesso.claims/regress:metrics-release
    networks: [backendnet]
    environment:
      DATABASE_URL: postgres://regress:nITj%22%2B0%28f89F@regressdb:5432/regress
    ports: ["8085:8085"]
    deploy:
      restart_policy: { condition: any, delay: 5s, max_attempts: 10, window: 120s }

  history-service:
    image: docker.adesso.claims/regress:history-service-release
    networks: [backendnet]
    environment:
      DATABASE_URL: postgres://regress:nITj%22%2B0%28f89F@regressdb:5432/regress
      MESSAGE_BROKER_URL: kafka:9092
      SERVER_PORT: "8090"
      RUST_LOG: info,history_service=debug
      RUST_BACKTRACE: "1"
    ports: ["8090:8090"]
    deploy:
      restart_policy: { condition: any, delay: 5s, max_attempts: 10, window: 120s }

  frontend:
    image: docker.adesso.claims/regress:frontend-release
    networks: [backendnet]
    environment:
      VITE_INGEST_URL: http://api-gateway:8080
      VITE_HISTORY_WS: ws://history-service:8090
      VITE_API_URL: http://pipeline-api:8084
      VITE_HISTORY_URL: http://history-service:8090
      VITE_UPLOAD_API_URL: http://pdf-ingest:8081
    ports: ["3001:80"]
    deploy:
      restart_policy: { condition: any, delay: 5s, max_attempts: 10, window: 120s }
