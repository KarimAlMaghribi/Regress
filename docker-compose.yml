version: '3.9'
services:
  api-gateway:
    build:
      context: .
      dockerfile: services/api-gateway/Dockerfile
    ports:
      - "8080:8080"
  pdf-ingest:
    build:
      context: .
      dockerfile: services/pdf-ingest/Dockerfile
    environment:
      DATABASE_URL: "postgres://regressdb:nITj%22%2B0%28f89F@regress-db-develop.postgres.database.azure.com:5432/allianz?sslmode=require"
      MESSAGE_BROKER_URL: kafka:9092
    ports:
      - "8081:8081"
  text-extraction:
    build:
      context: .
      dockerfile: services/text-extraction/Dockerfile
    environment:
      DATABASE_URL: "postgres://regressdb:nITj%22%2B0%28f89F@regress-db-develop.postgres.database.azure.com:5432/allianz?sslmode=require"
      MESSAGE_BROKER_URL: kafka:9092
    ports:
      - "8083:8083"
  prompt-manager:
    build:
      context: .
      dockerfile: services/prompt-manager/Dockerfile
    environment:
      DATABASE_URL: "postgres://regressdb:nITj%22%2B0%28f89F@regress-db-develop.postgres.database.azure.com:5432/allianz?sslmode=require"
    ports:
      - "8082:8082"
  pipeline-api:
    build:
      context: .
      dockerfile: services/pipeline-api/Dockerfile
    environment:
      DATABASE_URL: "postgres://regressdb:nITj%22%2B0%28f89F@regress-db-develop.postgres.database.azure.com:5432/allianz?sslmode=require"
    ports:
      - "8084:8084"
  metrics:
    build:
      context: .
      dockerfile: services/metrics/Dockerfile
    environment:
      DATABASE_URL: "postgres://regressdb:nITj%22%2B0%28f89F@regress-db-develop.postgres.database.azure.com:5432/allianz?sslmode=require"
    ports:
      - "8085:8085"
  history-service:
    build:
      context: .
      dockerfile: services/history-service/Dockerfile
    environment:
      DATABASE_URL: "postgres://regressdb:nITj%22%2B0%28f89F@regress-db-develop.postgres.database.azure.com:5432/allianz?sslmode=require"
      MESSAGE_BROKER_URL: kafka:9092
      SERVER_PORT: 8090
    ports:
      - "8090:8090"
  kafka:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=11111111111111111111
    ports:
      - "9092:9092"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8086:8080"
    depends_on:
      - kafka
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        # Use host ports so the browser can reach the services directly
        VITE_INGEST_URL: http://localhost:8081
        VITE_HISTORY_WS: ws://localhost:8090
    ports:
      - "3001:80"

